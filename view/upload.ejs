<html>

<head>
	<meta charset="utf-8">
	<style type="text/css">
		body {
			padding: 16px;
			margin: 0;
			/* font-size: 28px; */
			font-size: 18px;
		}

		.wrapper {
			display: grid;
			grid-template-columns: repeat(6, 1fr);
			grid-auto-rows: 200px;
		}

		* {
			box-sizing: border-box;
		}

		.wrapper {
			/* border: 2px solid #f76707; */
			border-radius: 5px;
			/* background-color: #fff4e6; */
			grid-column-gap: 16px;
			grid-row-gap: 16px;
		}

		.wrapper div {
			border-radius: 5px;
			
			padding: 1em;
			word-wrap: break-word;
			overflow: hidden;
		}

		.folder div {
			border: 2px solid #ffa94d;
			background-color: #ffd8a8;
			color: #d9480f;
		}
		.file div {
			border: 2px solid #c2c2c2;
			background-color: #e7e7e7;
			color: #272727;
		}

		.upload {
			margin-top: 28px;
			border: 2px solid #ffec99;
			border-radius: 5px;
			background-color: #fff9db;
			padding: 1em;
		}
	</style>

	<title>文件浏览</title>
</head>

<body>

	<div class="wrapper folder">
		<% folder.forEach(function (file) {%>
			<div>
				<a href="<%= url %>/$upload?path=<%= file.path %>"><%= file.name %></a>
			</div>
		<% })%>
	</div>

	<div class="wrapper file" style="margin-top: 28px;">
		<% file.forEach(function (file) {%>
			
			<% switch(file.type) { case 'base': %>
				<a href="<%= file.download %>" download="<%= file.name %>">
					<div>
						<%= file.name %>
					</div>
				</a>
				<% break; %>
			<% case "image": %>
				<a href="<%= file.download %>" download="<%= file.name %>">
					<div>
						<!-- <%= file.name %> -->
						<img src="<%= file.download %>" alt="">
					</div>
				</a>
				<% break; %>
			<% case "video": %>
				<a href="<%= file.download %>" download="<%= file.name %>">
					<div>
						<%= file.name %>
					</div>
				</a>
				<% break; %>
			<% } %>

		<% })%>
	</div>

	<div class="upload">
		<progress id="progressBar" value="0" max="100" style="width: 100%;"></progress>
		<span id="percentage"></span><span id="time"></span>
		<br /><br />
		<input type="file" id="file" name="myfile" />
		<input type="button" onclick="UpladFile()" value="上传" />
		<input type="button" onclick="cancleUploadFile()" value="取消" />
	
		<script type="text/javascript">
			//图片上传
			var xhr;
			//上传文件方法
			function UpladFile() {
				var fileObj = document.getElementById("file").files[0]; // js 获取文件对象
				// var url = "http://192.168.0.46:3900/$upload/"; // 接收上传文件的后台地址
				var url = "<%= url %>/$upload/"; // 接收上传文件的后台地址
				
	
				var form = new FormData(); // FormData 对象
				form.append("file", fileObj); // 文件对象
				form.append("path", "<%= basePath %>"); // 文件对象
				form.append("fileType", 0);
				xhr = new XMLHttpRequest();  // XMLHttpRequest 对象
				xhr.open("post", url, true); //post方式，url为服务器请求地址，true 该参数规定请求是否异步处理。
				xhr.onload = uploadComplete; //请求完成
				xhr.onerror =  uploadFailed; //请求失败
	
				xhr.upload.onprogress = progressFunction;//[上传进度调用方法实现]
				xhr.upload.onloadstart = function(){//上传开始执行方法
					ot = new Date().getTime();   //设置上传开始时间
					oloaded = 0;//设置上传开始时，以上传的文件大小为0
				};
	
				xhr.send(form); //开始上传，发送form数据
			}
	
			//上传成功响应
			function uploadComplete(evt) {
				//服务断接收完文件返回的结果
	
				var data = JSON.parse(evt.target.responseText);
				if(data.success) {
					alert("上传成功！");
				}else{
					alert("上传失败！");
				}
	
			}
			//上传失败
			function uploadFailed(evt) {
				alert("上传失败！");
			}
			//取消上传
			function cancleUploadFile(){
				xhr.abort();
			}
	
	
			//上传进度实现方法，上传过程中会频繁调用该方法
			function progressFunction(evt) {
				var progressBar = document.getElementById("progressBar");
				var percentageDiv = document.getElementById("percentage");
				// event.total是需要传输的总字节，event.loaded是已经传输的字节。如果event.lengthComputable不为真，则event.total等于0
				if (evt.lengthComputable) {//
					progressBar.max = evt.total;
					progressBar.value = evt.loaded;
					percentageDiv.innerHTML = Math.round(evt.loaded / evt.total * 100) + "%";
				}
				var time = document.getElementById("time");
				var nt = new Date().getTime();//获取当前时间
				var pertime = (nt-ot)/1000; //计算出上次调用该方法时到现在的时间差，单位为s
				ot = new Date().getTime(); //重新赋值时间，用于下次计算
				var perload = evt.loaded - oloaded; //计算该分段上传的文件大小，单位b
				oloaded = evt.loaded;//重新赋值已上传文件大小，用以下次计算
				//上传速度计算
				var speed = perload/pertime;//单位b/s
				var bspeed = speed;
				var units = 'b/s';//单位名称
				if(speed/1024>1){
					speed = speed/1024;
					units = 'k/s';
				}
				if(speed/1024>1){
					speed = speed/1024;
					units = 'M/s';
				}
				speed = speed.toFixed(1);
				//剩余时间
				var resttime = ((evt.total-evt.loaded)/bspeed).toFixed(1);
				time.innerHTML = '，速度：'+speed+units+'，剩余时间：'+resttime+'s';
				if(bspeed==0) time.innerHTML = '上传已取消';
			}
		</script>
	</div>

</body>

</html>